// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "prisma://accelerate.prisma-data.net/?api_key=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhcGlfa2V5IjoiYmZiOGNiZWUtZmQxZi00M2ViLWExNzItNTU3ZDA4YmZiYTk0IiwidGVuYW50X2lkIjoiYzA3YThhOGEwYTc2YjZkMDU0ZjFjMzQ4OWMzZTAxMTBmZTcxN2NlOWQ5YjM0YWY1MDA3ZTlkNDQ2ODU2MDIxMiIsImludGVybmFsX3NlY3JldCI6ImZjNjc5ZGQzLTY2Y2EtNDJmNC04ZmIzLTZkNjljYjY3MWJlMyJ9.9D8R_nJLXTOpdW1dCk5CensipP0WBdh8TVHgsq8ASgo"
  directUrl = "postgresql://neondb_owner:CBdcJDz7omX2@ep-green-salad-a5tyf6r6.us-east-2.aws.neon.tech/neondb?sslmode=require"
}

model User{
  id Int @id @default(autoincrement())
  username String? 
  email String @unique
  password String
  blogs Blog[]
}

model Blog{
  id Int @id @default(autoincrement())
  userId Int
  title String
  description String?
  user User @relation(fields: [userId],references: [id])
}

